{"version":3,"sources":["../src/to-length-x.js"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAsB,cAAtB;AAEA,IAAM,gBAAgB,GAAG,gBAAzB;AAEA;;;;;;;;AAOA,IAAM,QAAQ,GAAG,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACxC,MAAM,GAAG,GAAG,SAAS,CAAC,KAAD,CAArB,CADwC,CAGxC;;AACA,MAAI,GAAG,IAAI,CAAX,EAAc;AACZ,WAAO,CAAP;AACD;;AAED,MAAI,GAAG,GAAG,gBAAV,EAA4B;AAC1B,WAAO,gBAAP;AACD;;AAED,SAAO,GAAP;AACD,CAbD;;AAeA,eAAe,QAAf","file":"to-length-x.esm.js","sourcesContent":["import toInteger from 'to-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toLength = function toLength(value) {\n  const len = toInteger(value);\n\n  // includes converting -0 to +0\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};\n\nexport default toLength;\n"]}